var width = window.screen.width - 10;
var height = width*(479/1080);
var turfColor = "#6f8c69";
var hashandlinecolor = "#FFFFFF";
document.getElementById('temp').innerHTML = '<canvas id="myCanvas" display="inline-block" width="'+ width + '" height="' + height + '"></canvas>';
var c = document.getElementById("myCanvas");
var context = c.getContext("2d");
var num = 0;
window.requestAnimationFrame(gameLoop);
function drawVerticalLine(feetfromleg) {
    context.strokeStyle = hashandlinecolor;
    context.lineWidth = (1/1080)*width;
    context.moveTo((feetfromleg/360)*width, 0);
    context.lineTo((feetfromleg/360)*width, height);
}
function drawHorisontalHash(feetfromleft, feetfromtop) {
    context.strokeStyle = hashandlinecolor;
    context.moveTo(((feetfromleft-2)/360)*width, (feetfromtop/360)*width);
    context.lineTo(((feetfromleft+2)/360)*width, (feetfromtop/360)*width);
}
function drawVerticalHash(feetfromleft, feetfromtop) {
    context.strokeStyle = hashandlinecolor;
    context.moveTo(((feetfromleft)/360)*width, ((feetfromtop)/360)*width);
    context.lineTo(((feetfromleft)/360)*width, ((feetfromtop+2)/360)*width);
}
function drawNumbers(feetfromleft, feetfromtop) {
    context.strokeStyle = hashandlinecolor;
    context.font = (6/360)*width + "px Benton Sans"
    context.fillStyle = hashandlinecolor;
    context.fillText(((feetfromleft - 30)/3), ((feetfromleft-3)/360)*width, ((feetfromtop)/360)*width);
}
function draw() {
    context.fillStyle = turfColor;
    context.fillRect(0, 0, width, height);
    drawVerticalLine(30);drawVerticalLine(30);drawVerticalLine(45);drawVerticalLine(60);drawVerticalLine(75);drawVerticalLine(90);drawVerticalLine(105);drawVerticalLine(120);drawVerticalLine(135);drawVerticalLine(150);drawVerticalLine(165);drawVerticalLine(180);drawVerticalLine(195);drawVerticalLine(210);drawVerticalLine(225);drawVerticalLine(240);drawVerticalLine(255);drawVerticalLine(270);drawVerticalLine(285);drawVerticalLine(300);drawVerticalLine(315);drawVerticalLine(330);drawVerticalLine(330);
    drawHorisontalHash(45, (160/3));drawHorisontalHash(60, (160/3));drawHorisontalHash(75, (160/3));drawHorisontalHash(90, (160/3));drawHorisontalHash(105, (160/3));drawHorisontalHash(120, (160/3));drawHorisontalHash(135, (160/3));drawHorisontalHash(150, (160/3));drawHorisontalHash(165, (160/3));drawHorisontalHash(180, (160/3));drawHorisontalHash(195, (160/3));drawHorisontalHash(210, (160/3));drawHorisontalHash(225, (160/3));drawHorisontalHash(240, (160/3));drawHorisontalHash(255, (160/3));drawHorisontalHash(270, (160/3));drawHorisontalHash(285, (160/3));drawHorisontalHash(300, (160/3));drawHorisontalHash(315, (160/3));
    drawHorisontalHash(45, (320/3));drawHorisontalHash(60, (320/3));drawHorisontalHash(75, (320/3));drawHorisontalHash(90, (320/3));drawHorisontalHash(105, (320/3));drawHorisontalHash(120, (320/3));drawHorisontalHash(135, (320/3));drawHorisontalHash(150, (320/3));drawHorisontalHash(165, (320/3));drawHorisontalHash(180, (320/3));drawHorisontalHash(195, (320/3));drawHorisontalHash(210, (320/3));drawHorisontalHash(225, (320/3));drawHorisontalHash(240, (320/3));drawHorisontalHash(255, (320/3));drawHorisontalHash(270, (320/3));drawHorisontalHash(285, (320/3));drawHorisontalHash(300, (320/3));drawHorisontalHash(315, (320/3));
    drawVerticalHash(30, (314/3));drawVerticalHash(33, (314/3));drawVerticalHash(36, (314/3));drawVerticalHash(39, (314/3));drawVerticalHash(42, (314/3));drawVerticalHash(45, (314/3));drawVerticalHash(48, (314/3));drawVerticalHash(51, (314/3));drawVerticalHash(54, (314/3));drawVerticalHash(57, (314/3));drawVerticalHash(60, (314/3));drawVerticalHash(63, (314/3));drawVerticalHash(66, (314/3));drawVerticalHash(69, (314/3));drawVerticalHash(72, (314/3));drawVerticalHash(75, (314/3));drawVerticalHash(78, (314/3));drawVerticalHash(81, (314/3));drawVerticalHash(84, (314/3));drawVerticalHash(87, (314/3));drawVerticalHash(90, (314/3));drawVerticalHash(93, (314/3));drawVerticalHash(96, (314/3));drawVerticalHash(99, (314/3));drawVerticalHash(102, (314/3));drawVerticalHash(105, (314/3));drawVerticalHash(108, (314/3));drawVerticalHash(111, (314/3));drawVerticalHash(114, (314/3));drawVerticalHash(117, (314/3));drawVerticalHash(120, (314/3));drawVerticalHash(123, (314/3));drawVerticalHash(126, (314/3));drawVerticalHash(129, (314/3));drawVerticalHash(132, (314/3));drawVerticalHash(135, (314/3));drawVerticalHash(138, (314/3));drawVerticalHash(141, (314/3));drawVerticalHash(144, (314/3));drawVerticalHash(147, (314/3));drawVerticalHash(150, (314/3));drawVerticalHash(153, (314/3));drawVerticalHash(156, (314/3));drawVerticalHash(159, (314/3));drawVerticalHash(162, (314/3));drawVerticalHash(165, (314/3));drawVerticalHash(168, (314/3));drawVerticalHash(171, (314/3));drawVerticalHash(174, (314/3));drawVerticalHash(177, (314/3));drawVerticalHash(180, (314/3));drawVerticalHash(183, (314/3));drawVerticalHash(186, (314/3));drawVerticalHash(189, (314/3));drawVerticalHash(192, (314/3));drawVerticalHash(195, (314/3));drawVerticalHash(198, (314/3));drawVerticalHash(201, (314/3));drawVerticalHash(204, (314/3));drawVerticalHash(207, (314/3));drawVerticalHash(210, (314/3));drawVerticalHash(213, (314/3));drawVerticalHash(216, (314/3));drawVerticalHash(219, (314/3));drawVerticalHash(222, (314/3));drawVerticalHash(225, (314/3));drawVerticalHash(228, (314/3));drawVerticalHash(231, (314/3));drawVerticalHash(234, (314/3));drawVerticalHash(237, (314/3));drawVerticalHash(240, (314/3));drawVerticalHash(243, (314/3));drawVerticalHash(246, (314/3));drawVerticalHash(249, (314/3));drawVerticalHash(252, (314/3));drawVerticalHash(255, (314/3));drawVerticalHash(258, (314/3));drawVerticalHash(261, (314/3));drawVerticalHash(264, (314/3));drawVerticalHash(267, (314/3));drawVerticalHash(270, (314/3));drawVerticalHash(273, (314/3));drawVerticalHash(276, (314/3));drawVerticalHash(279, (314/3));drawVerticalHash(282, (314/3));drawVerticalHash(285, (314/3));drawVerticalHash(288, (314/3));drawVerticalHash(291, (314/3));drawVerticalHash(294, (314/3));drawVerticalHash(297, (314/3));drawVerticalHash(300, (314/3));drawVerticalHash(303, (314/3));drawVerticalHash(306, (314/3));drawVerticalHash(309, (314/3));drawVerticalHash(312, (314/3));drawVerticalHash(315, (314/3));drawVerticalHash(318, (314/3));drawVerticalHash(321, (314/3));drawVerticalHash(324, (314/3));drawVerticalHash(327, (314/3));drawVerticalHash(330, (314/3));
    drawVerticalHash(30, (160/3));drawVerticalHash(33, (160/3));drawVerticalHash(36, (160/3));drawVerticalHash(39, (160/3));drawVerticalHash(42, (160/3));drawVerticalHash(45, (160/3));drawVerticalHash(48, (160/3));drawVerticalHash(51, (160/3));drawVerticalHash(54, (160/3));drawVerticalHash(57, (160/3));drawVerticalHash(60, (160/3));drawVerticalHash(63, (160/3));drawVerticalHash(66, (160/3));drawVerticalHash(69, (160/3));drawVerticalHash(72, (160/3));drawVerticalHash(75, (160/3));drawVerticalHash(78, (160/3));drawVerticalHash(81, (160/3));drawVerticalHash(84, (160/3));drawVerticalHash(87, (160/3));drawVerticalHash(90, (160/3));drawVerticalHash(93, (160/3));drawVerticalHash(96, (160/3));drawVerticalHash(99, (160/3));drawVerticalHash(102, (160/3));drawVerticalHash(105, (160/3));drawVerticalHash(108, (160/3));drawVerticalHash(111, (160/3));drawVerticalHash(114, (160/3));drawVerticalHash(117, (160/3));drawVerticalHash(120, (160/3));drawVerticalHash(123, (160/3));drawVerticalHash(126, (160/3));drawVerticalHash(129, (160/3));drawVerticalHash(132, (160/3));drawVerticalHash(135, (160/3));drawVerticalHash(138, (160/3));drawVerticalHash(141, (160/3));drawVerticalHash(144, (160/3));drawVerticalHash(147, (160/3));drawVerticalHash(150, (160/3));drawVerticalHash(153, (160/3));drawVerticalHash(156, (160/3));drawVerticalHash(159, (160/3));drawVerticalHash(162, (160/3));drawVerticalHash(165, (160/3));drawVerticalHash(168, (160/3));drawVerticalHash(171, (160/3));drawVerticalHash(174, (160/3));drawVerticalHash(177, (160/3));drawVerticalHash(180, (160/3));drawVerticalHash(183, (160/3));drawVerticalHash(186, (160/3));drawVerticalHash(189, (160/3));drawVerticalHash(192, (160/3));drawVerticalHash(195, (160/3));drawVerticalHash(198, (160/3));drawVerticalHash(201, (160/3));drawVerticalHash(204, (160/3));drawVerticalHash(207, (160/3));drawVerticalHash(210, (160/3));drawVerticalHash(213, (160/3));drawVerticalHash(216, (160/3));drawVerticalHash(219, (160/3));drawVerticalHash(222, (160/3));drawVerticalHash(225, (160/3));drawVerticalHash(228, (160/3));drawVerticalHash(231, (160/3));drawVerticalHash(234, (160/3));drawVerticalHash(237, (160/3));drawVerticalHash(240, (160/3));drawVerticalHash(243, (160/3));drawVerticalHash(246, (160/3));drawVerticalHash(249, (160/3));drawVerticalHash(252, (160/3));drawVerticalHash(255, (160/3));drawVerticalHash(258, (160/3));drawVerticalHash(261, (160/3));drawVerticalHash(264, (160/3));drawVerticalHash(267, (160/3));drawVerticalHash(270, (160/3));drawVerticalHash(273, (160/3));drawVerticalHash(276, (160/3));drawVerticalHash(279, (160/3));drawVerticalHash(282, (160/3));drawVerticalHash(285, (160/3));drawVerticalHash(288, (160/3));drawVerticalHash(291, (160/3));drawVerticalHash(294, (160/3));drawVerticalHash(297, (160/3));drawVerticalHash(300, (160/3));drawVerticalHash(303, (160/3));drawVerticalHash(306, (160/3));drawVerticalHash(309, (160/3));drawVerticalHash(312, (160/3));drawVerticalHash(315, (160/3));drawVerticalHash(318, (160/3));drawVerticalHash(321, (160/3));drawVerticalHash(324, (160/3));drawVerticalHash(327, (160/3));drawVerticalHash(330, (160/3));
    drawNumbers(225, 154);drawNumbers(195, 154);drawNumbers(165, 154);drawNumbers(135, 154);drawNumbers(105, 154);drawNumbers(75, 154);drawNumbers(45, 154);drawNumbers(315, 154);drawNumbers(285, 154);drawNumbers(255, 154);
    context.stroke();
}
function gameLoop() {
    draw();
    window.requestAnimationFrame(gameLoop);
}
